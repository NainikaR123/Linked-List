void insertNode(Node** head, int data) 
{
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;
    newNode->next = *head;
    *head = newNode;
}
void insertAtEnd(Node** head, int data) 
{
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;
    newNode->next = NULL;

    if (*head == NULL) 
   {
        *head = newNode;
        return;
    }

    Node* temp = *head;
    while (temp->next != NULL) 
    {
        temp = temp->next;
    }
    temp->next = newNode;
}
void insertAtPosition(Node** head, int position, int data) 
{
    if (position < 0)
    {
        printf("Invalid position\n");
        return;
    }

    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;
    Node* temp = *head;
if (position == 0)
  {
        newNode->next = *head;
        *head = newNode;
        return;
    }
int count = 0;
    while (temp != NULL && count < position - 1) 
   {
        temp = temp->next;
        count++;
    }
if (temp == NULL) 
   {
        printf("Position out of range\n");
        free(newNode); // Avoid memory leak if position is invalid
        return;
    }
newNode->next = temp->next;
    temp->next = newNode;
}
